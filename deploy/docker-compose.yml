version: "3.9"
services:
  api:
    build:
      context: ..
      dockerfile: Dockerfile.api
    image: wowcapital-api:latest
    container_name: wowcapital-api
    env_file:
      - ../.env
    environment:
      - REDIS_URL=${REDIS_URL}
      - MONGO_URI=${MONGO_URI}
      - QDRANT_URL=${QDRANT_URL}
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      - redis
      - mongo
      - qdrant
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: wowcapital-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    restart: unless-stopped

  mongo:
    image: mongo:6
    container_name: wowcapital-mongo
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=wowcapital
    command: ["mongod", "--auth", "--bind_ip_all"]
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:latest
    container_name: wowcapital-qdrant
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY}
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: wowcapital-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "127.0.0.1:9090:9090"
    depends_on:
      - api
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.4.5
    container_name: wowcapital-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped

  ai-gateway:
    image: wowcapital-api:latest
    container_name: wowcapital-ai
    command: ["uvicorn", "backend.ai_gateway.app:app", "--host", "0.0.0.0", "--port", "8080"]
    env_file:
      - ../.env
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_ORGANIZATION=${OPENAI_ORGANIZATION}
      - WOW_API_KEYS=${WOW_API_KEYS}
      - REDIS_URL=${REDIS_URL}
    ports:
      - "127.0.0.1:8081:8080"
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  mongo_data:
  qdrant_data:
  grafana_data:
