FROM python:3.11-slim

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update -y && apt-get install -y --no-install-recommends \
    build-essential gcc g++ make wget curl ca-certificates \
    libssl-dev libffi-dev gfortran \
    libblas-dev liblapack-dev \
    git pkg-config \
  && rm -rf /var/lib/apt/lists/*

# Build TA-Lib C
WORKDIR /tmp
RUN wget -q https://downloads.sourceforge.net/project/ta-lib/ta-lib/0.4.0/ta-lib-0.4.0-src.tar.gz \
  && tar -xzf ta-lib-0.4.0-src.tar.gz \
  && cd ta-lib \
  && ./configure --prefix=/usr \
  && make -j"$(nproc)" \
  && make install \
  && ldconfig \
  && cd / \
  && rm -rf /tmp/ta-lib /tmp/ta-lib-0.4.0-src.tar.gz

WORKDIR /app
COPY requirements.txt ./

# Fix Starlette pin and install deps
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
  && pip install --no-cache-dir "starlette>=0.36.3,<0.37.0" \
  && grep -viE "^[[:space:]]*starlette[[:space:]]*==" requirements.txt > /tmp/requirements.nostarlette.txt \
  && pip install --no-cache-dir -r /tmp/requirements.nostarlette.txt

# Install TA-Lib Python wrapper
ENV TA_INCLUDE_PATH=/usr/include/ta-lib \
    TA_LIBRARY_PATH=/usr/lib
RUN pip install --no-cache-dir --no-binary :all: --no-build-isolation TA-Lib==0.4.28

# Copy source
COPY . /app

ENV PYTHONUNBUFFERED=1 PYTHONDONTWRITEBYTECODE=1
EXPOSE 8080
CMD ["uvicorn", "api_gateway.app:app", "--host", "0.0.0.0", "--port", "8080"]
